// <auto-generated />
using System;
using FurEverHomes.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FurEverHomes.Migrations
{
    [DbContext(typeof(AdoptionDbContext))]
    [Migration("20240719074700_Fixed Entities")]
    partial class FixedEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FurEverHomes.Models.Domain.Adopters", b =>
                {
                    b.Property<int>("AdopterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdopterId"));

                    b.Property<string>("AdopterAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdopterEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdopterFirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdopterLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AdopterPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdopterId");

                    b.ToTable("Adopters");
                });

            modelBuilder.Entity("FurEverHomes.Models.Domain.Application", b =>
                {
                    b.Property<int>("ApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ApplicationId"));

                    b.Property<int>("AdopterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PetId")
                        .HasColumnType("int");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ApplicationId");

                    b.HasIndex("AdopterId");

                    b.HasIndex("PetId");

                    b.HasIndex("ShelterId");

                    b.ToTable("Application");
                });

            modelBuilder.Entity("FurEverHomes.Models.Domain.Pets", b =>
                {
                    b.Property<int>("PetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PetId"));

                    b.Property<int?>("AdopterId")
                        .HasColumnType("int");

                    b.Property<int>("PetAge")
                        .HasColumnType("int");

                    b.Property<string>("PetBreed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PetGender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PetHealthStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PetSpecies")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShelterId")
                        .HasColumnType("int");

                    b.HasKey("PetId");

                    b.HasIndex("AdopterId");

                    b.HasIndex("ShelterId");

                    b.ToTable("Pets");
                });

            modelBuilder.Entity("FurEverHomes.Models.Domain.Shelter", b =>
                {
                    b.Property<int>("ShelterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShelterId"));

                    b.Property<string>("ShelterAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShelterEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShelterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShelterPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShelterId");

                    b.ToTable("Shelter");
                });

            modelBuilder.Entity("FurEverHomes.Models.Domain.Application", b =>
                {
                    b.HasOne("FurEverHomes.Models.Domain.Adopters", "Adopter")
                        .WithMany("Applications")
                        .HasForeignKey("AdopterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FurEverHomes.Models.Domain.Pets", "Pet")
                        .WithMany()
                        .HasForeignKey("PetId");

                    b.HasOne("FurEverHomes.Models.Domain.Shelter", "Shelter")
                        .WithMany("Applications")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adopter");

                    b.Navigation("Pet");

                    b.Navigation("Shelter");
                });

            modelBuilder.Entity("FurEverHomes.Models.Domain.Pets", b =>
                {
                    b.HasOne("FurEverHomes.Models.Domain.Adopters", "Adopter")
                        .WithMany("Pets")
                        .HasForeignKey("AdopterId");

                    b.HasOne("FurEverHomes.Models.Domain.Shelter", "Shelter")
                        .WithMany("Pets")
                        .HasForeignKey("ShelterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Adopter");

                    b.Navigation("Shelter");
                });

            modelBuilder.Entity("FurEverHomes.Models.Domain.Adopters", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Pets");
                });

            modelBuilder.Entity("FurEverHomes.Models.Domain.Shelter", b =>
                {
                    b.Navigation("Applications");

                    b.Navigation("Pets");
                });
#pragma warning restore 612, 618
        }
    }
}
